GET _cluster/health
GET /_cat/health?v
GET /_cat/indices?v
put /test_index?pretty
delete /test_index

put /ecommerce/product/1
{
  "name": "gaolujie yagao",
  "desc": "gaolujie meibai",
  "price": 30,
  "producer": "gaolujie producer",
  "tags": ["meibai", "fangzhu"]
}
put /ecommerce/product/2
{
  "name": "jiajieshi yagao",
  "desc": "youxiao fangzhu",
  "price": 25,
  "producer": "jiajieshi producer",
  "tags": ["fangzhu"]
}
put /ecommerce/product/3
{
  "name": "zhonghua yagao",
  "desc": "caoben zhiwu",
  "price": 40,
  "producer": "zhonghua producer",
  "tags": ["qingxin"]
}

put /ecommerce/product/4
{
  "name": "special yagao",
  "desc": "special meibai",
  "price": 50,
  "producer": "special yagao producer",
  "tags": ["meibai"]
}

get /ecommerce/product/1

put /ecommerce/product/1
{
  "name": "jiaqiangban gaolujie yagao",
  "desc": "gaolujie meibai",
  "price": 30,
  "producer": "gaolujie producer",
  "tags": ["meibai", "fangzhu"]
}

post /ecommerce/product/1/_update
{
  "doc": {
    "name": "gaolujie yagao"
  }
}

delete /ecommerce/product/1

get /ecommerce/product/_search

get /ecommerce/product/_search?q=name:yagao&sort=price:desc

## DSL: Domain Specified Language

get /ecommerce/product/_search
{
  "query": {
    "match_all": {}
  }
}

get /ecommerce/product/_search
{
  "query": {
    "match": {
      "name": "yagao"
    }
  },
  "sort": [
    {"price": "desc"}
  ]
}

## 分页查询

get /ecommerce/product/_search
{
  "query": {
    "match_all": {}
  },
  "from": 1,
  "size": 1
}

## 指定查询某些fields

get /ecommerce/product/_search
{
  "query": {
    "match_all": {}
  },
  "_source": ["name", "price"]
}


## query filter

get /ecommerce/product/_search
{
  "query": {
    "bool": {
      "must": {
        "match": {
          "name": "yagao"
        }
      },
      "filter": {
        "range": {
          "price": {
            "gt": 25
          }
        }
      }
    }
  }
}

## full-text search 全文检索

get /ecommerce/product/_search
{
  "query": {
    "match": {
      "producer": "yagao producer"
    }
  }
}

## phrase search 短语搜索
## 搜索的字段完全匹配
get /ecommerce/product/_search
{
  "query": {
    "match_phrase": {
      "producer": "yagao producer"
    }
  }
}

## highlight search 高亮搜索结果
get /ecommerce/product/_search
{
  "query": {
    "match": {
      "producer": "producer"
    }
  },
  "highlight": {
    "fields": {
      "producer": {}
    }
  }
}

## 计算每个tag下的商品数量

put /ecommerce/_mapping
{
  "properties": {
    "tags": {
      "type": "text",
      "fielddata": true
    }
  }
}

get /ecommerce/product/_search
{
  "aggs": {
    "group_by_tags": {
      "terms": {
        "field": "tags"
      }
    }
  }
}

## 对名称中包含yagao的商品，计算每个tag下的商品数量

get /ecommerce/product/_search
{
  "size": 0,
  "query": {
    "match": {
      "name": "yagao"
    }
  },
  "aggs": {
    "group_by_tags": {
      "terms": {
        "field": "tags"
      } 
    }
  }
}

## 先分组，再算每组的平均值，计算每个tag下的商品的平均价格

get /ecommerce/product/_search
{
  "size": 0,
  "aggs": {
    "group_by_tags": {
      "terms": {
        "field": "tags"
      },
      "aggs": {
        "avg_price": {
          "avg": {
            "field": "price"
          }
        }
      }
    }
  }
}

## 先分组，再算每组的平均值，计算每个tag下的商品的平均价格，再按照平均价格排序

get /ecommerce/product/_search
{
  "size": 0,
  "aggs": {
    "group_by_tags": {
      "terms": {
        "field": "tags",
        "order": {
          "avg_price": "desc"
        }
      },
      "aggs": {
        "avg_price": {
          "avg": {
            "field": "price"
          }
        }
      }
    }
  }
}

## 按照指定的价格范围区间进行分组，然后在每组内再按照tag进行分组，最后再计算每组的平均价格

get /ecommerce/product/_search
{
  "size": 0,
  "aggs": {
    "group_by_price": {
      "range": {
        "field": "price",
        "ranges": [
          {
            "from": 0,
            "to": 20
          },
          {
            "from": 20,
            "to": 40
          },
          {
            "from": 40,
            "to": 60
          }
        ]
      },
      "aggs": {
        "group_by_tags": {
          "terms": {
            "field": "tags",
            "order": {
              "avg_price": "asc"
            }
          },
          "aggs": {
            "avg_price": {
              "avg": {
                "field": "price"
              }
            }
          }
        }
      }
    }
  }
}

PUT /test_index/test_type/1
{
  "test_field1": "test field1",
  "test_field2": "test field2"
}

GET /test_index/test_type/1

GET /test_index/test_type/1?_source=test_field1,test_field2

PUT /test_index/test_type/4?op_type=create
{
  "test_field": "test test112221"
}

PUT /test_index/test_type/4/_create
{
  "test_field": "test test112221"
}

DELETE /test_index/test_type/4